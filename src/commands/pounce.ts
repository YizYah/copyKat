/* ns__file unit: static-command, comp: pounce.ts */
/*
* This file is autogenerated using the easy-oclif-cli template with ns-flip. Please view
* the instructions for this code base at meta/instructions.md.
*/

/* ns__start_section imports */
import {Command, flags} from '@oclif/command'

/* ns__custom_start customImports */
/* ns__custom_end customImports */
/* ns__end_section imports */

export default class Pounce extends Command {
static description = `specify a model code base and generate a template to build it
`

static examples = [
/* ns__custom_start examples */
// replace this when you change your command!! To regenerate fresh, first delete everything between the squre brackets.
  `$ copykat pounce sampleModel -t sampleTemplateDir 
You have executed the pounce command...
`,
/* ns__custom_end examples */
]

static flags = {
  help: flags.help({char: 'h'}),
  templateDir: flags.string({
    char: 't',
    description: 'path to the generator that you will build',
  }),
}

static args = [
  {
    name: 'model',
    description: 'path to a model code base from which you will generate your template',
    required: true,
  },
]

async run() {
  const {args, flags} = this.parse(Pounce)

  const {model} = args

  const {templateDir} = flags
  /* ns__custom_start run */
  // Put your custom code here...
  Object.keys(args).map((argName: string) => {
    if (args[argName] === 'sampleBadArgValue')
      throw new Error(`bad arg value '${args[argName]}' for arg '${argName}'`)
    return argName
  })
  this.log(`You have executed the pounce command.
  Here are the args you used: 
    model: ${model}
  Here are the flags you used: 
    templateDir: ${templateDir}

Learn how to modify the generated code here: https://ns-flip.nostack.net/Safe-Custom-Code.`)
  /* ns__custom_end run */
}
}
